name: Publish to Maven Central

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'
          java-package: jdk

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - id: install-secret-key
        name: Install GPG secret key
        run: |
          cat <(echo -e "${{ secrets.GPG_PRIVATE_KEY }}") | gpg --batch --import
      - name: Build and Deploy to MVN Central
        run: |
          mvn --no-transfer-progress \
            --batch-mode \
            --file pom.xml -s release/m2-settings.xml clean deploy -DskipTests=true -DperformRelease=true
        env:
          JDK_JAVA_OPTIONS: "--illegal-access=warn"
          MAVEN_OPTS: "--add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.text=ALL-UNNAMED --add-opens=java.desktop/java.awt.font=ALL-UNNAMED"
          CENTRAL_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          CENTRAL_PASSWORD: ${{ secrets.CENTRAL_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      - name: Get the version
        id: get_version
        run: echo "VERSION=$(echo $GITHUB_REF | cut -d / -f 3 | cut -c 2-)" >> $GITHUB_OUTPUT
      - run: echo "previous_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo '')" >> $GITHUB_ENV
      - name: Generate Release Changelog
        id: changelog
        uses: jaywcjlove/changelog-generator@main
        if: env.previous_tag
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create javadoc zip
        uses: vimtor/action-zip@v1
        with:
          files: target/reports/apidocs
          dest: javadoc.zip
      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/restfb*.jar
            javadoc.zip
          draft: true
          prerelease: false
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ${{ steps.changelog.outputs.changelog }}